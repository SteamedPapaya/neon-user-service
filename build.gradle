plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'com.nemo'
version = '0.0.1-SNAPSHOT'

jacoco {
	toolVersion = "0.8.8"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Cloud Gateway
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// MySQL Driver
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Cloud Config Client
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
	testImplementation 'com.tngtech.archunit:archunit-junit5:0.23.1'
	testImplementation 'org.springframework.security:spring-security-test'

	// Monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// H2 Database (for testing)
	testImplementation 'com.h2database:h2'

	// OAuth2 Client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JWT
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // 테스트 후에 Jacoco 리포트를 생성
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}
